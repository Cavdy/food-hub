{"version":3,"sources":["../../api/models/index.js"],"names":["basename","path","__filename","env","process","NODE_ENV","config","require","__dirname","db","sequelize","use_env_variable","Sequelize","database","username","password","fs","readdirSync","filter","file","indexOf","slice","forEach","model","import","join","name","Object","keys","modelName","associate"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,QAAQ,GAAGC,cAAKD,QAAL,CAAcE,UAAd,CAAjB;;AACA,IAAMC,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;;AACA,IAAMC,MAAM,GAAGC,OAAO,CAACC,SAAS,GAAG,wBAAb,CAAP,CAA8CL,GAA9C,CAAf;;AACA,IAAMM,EAAE,GAAG,EAAX;AAEA,IAAIC,SAAJ;;AACA,IAAIJ,MAAM,CAACK,gBAAX,EAA6B;AAC3BD,EAAAA,SAAS,GAAG,IAAIE,kBAAJ,CAAcR,OAAO,CAACD,GAAR,CAAYG,MAAM,CAACK,gBAAnB,CAAd,EAAoDL,MAApD,CAAZ;AACD,CAFD,MAEO;AACLI,EAAAA,SAAS,GAAG,IAAIE,kBAAJ,CAAcN,MAAM,CAACO,QAArB,EAA+BP,MAAM,CAACQ,QAAtC,EAAgDR,MAAM,CAACS,QAAvD,EAAiET,MAAjE,CAAZ;AACD;;AAEDU,YACGC,WADH,CACeT,SADf,EAEGU,MAFH,CAEU,UAACC,IAAD,EAAU;AAChB,SAAQA,IAAI,CAACC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8BD,IAAI,KAAKnB,QAAvC,IAAqDmB,IAAI,CAACE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAA/E;AACD,CAJH,EAKGC,OALH,CAKW,UAACH,IAAD,EAAU;AACjB,MAAMI,KAAK,GAAGb,SAAS,CAACc,MAAV,CAAiBvB,cAAKwB,IAAL,CAAUjB,SAAV,EAAqBW,IAArB,CAAjB,CAAd;AACAV,EAAAA,EAAE,CAACc,KAAK,CAACG,IAAP,CAAF,GAAiBH,KAAjB;AACD,CARH;;AAUAI,MAAM,CAACC,IAAP,CAAYnB,EAAZ,EAAgBa,OAAhB,CAAwB,UAACO,SAAD,EAAe;AACrC,MAAIpB,EAAE,CAACoB,SAAD,CAAF,CAAcC,SAAlB,EAA6B;AAC3BrB,IAAAA,EAAE,CAACoB,SAAD,CAAF,CAAcC,SAAd,CAAwBrB,EAAxB;AACD;AACF,CAJD;AAMAA,EAAE,CAACC,SAAH,GAAeA,SAAf;AACAD,EAAE,CAACG,SAAH,GAAeA,kBAAf;eAEeH,E","sourcesContent":["import fs from 'fs';\r\nimport path from 'path';\r\nimport Sequelize from 'sequelize';\r\n\r\nconst basename = path.basename(__filename);\r\nconst env = process.env.NODE_ENV || 'development';\r\nconst config = require(__dirname + '/../config/config.json')[env];\r\nconst db = {};\r\n\r\nlet sequelize;\r\nif (config.use_env_variable) {\r\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\r\n} else {\r\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\r\n}\r\n\r\nfs\r\n  .readdirSync(__dirname)\r\n  .filter((file) => {\r\n    return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js');\r\n  })\r\n  .forEach((file) => {\r\n    const model = sequelize.import(path.join(__dirname, file));\r\n    db[model.name] = model;\r\n  });\r\n\r\nObject.keys(db).forEach((modelName) => {\r\n  if (db[modelName].associate) {\r\n    db[modelName].associate(db);\r\n  }\r\n});\r\n\r\ndb.sequelize = sequelize;\r\ndb.Sequelize = Sequelize;\r\n\r\nexport default db;\r\n"],"file":"index.js"}