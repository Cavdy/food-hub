{"version":3,"sources":["../../api/services/Register.js"],"names":["User","Model","UserService","createUser","user","bcrypt","genSalt","error","salt","hash","password","err","create","email"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,IAAI,GAAGC,gBAAMD,IAAnB;AAEA,IAAME,WAAW,GAAG;AAClBC,EAAAA,UADkB,sBACPC,IADO,EACD;AACfC,sBAAOC,OAAP,CAAe,EAAf,EAAmB,UAACC,KAAD,EAAQC,IAAR,EAAiB;AAClCH,wBAAOI,IAAP,CAAYL,IAAI,CAACM,QAAjB,EAA2BF,IAA3B,EAAiC,UAACG,GAAD,EAAMF,IAAN,EAAe;AAC9C,YAAIE,GAAJ,EAAS,MAAMA,GAAN;AACTP,QAAAA,IAAI,CAACM,QAAL,GAAgBD,IAAhB;AACA,eAAOT,IAAI,CAACY,MAAL,CAAY;AACjBC,UAAAA,KAAK,EAAET,IAAI,CAACS,KADK;AAEjBH,UAAAA,QAAQ,EAAEN,IAAI,CAACM;AAFE,SAAZ,CAAP;AAID,OAPD;AAQD,KATD;AAUD;AAZiB,CAApB;eAeeR,W","sourcesContent":["import bcrypt from 'bcryptjs';\r\nimport Model from '../models';\r\n\r\nconst User = Model.User;\r\n\r\nconst UserService = {\r\n  createUser(user) {\r\n    bcrypt.genSalt(10, (error, salt) => {\r\n      bcrypt.hash(user.password, salt, (err, hash) => {\r\n        if (err) throw err;\r\n        user.password = hash;\r\n        return User.create({\r\n          email: user.email,\r\n          password: user.password,\r\n        });\r\n      });\r\n    });\r\n  },\r\n};\r\n\r\nexport default UserService;\r\n"],"file":"Register.js"}